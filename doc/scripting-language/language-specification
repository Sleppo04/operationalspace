The OperationalSpace Programming language shall have a name.
It is not a general-purpose scripting language but rather a scripting language specialized on re-occurring calls to the same script.

It will feature:
	compile-time includes
	static typing
	custom data types
	functions
	variables persistent in-between runs

Programs shall have the following structure:
	----- program.extension -----
	include "filename"
	...
	Statements
	...
	-----        EOF        -----

The process of compiling:
	User-Supplied Environment-Structure (global namespace)
	Lexer converts the source into tokens
	Parser parses the tokens into an abstract Syntax Tree
	Compiler compiles the Abstract Syntax Tree to Bytecode

How to execute a program:
	Create an environment
	Compile the source
	Execute the bytecode on the same environment
